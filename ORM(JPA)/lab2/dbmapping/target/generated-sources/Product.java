// default package
// Generated Jan 7, 2023, 7:22:48 PM by Hibernate Tools 6.1.6.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="biddingschema"
)
public class Product  implements java.io.Serializable {


     private Integer id;
     private Seller seller;
     private String description;
     private Date expirationDate;
     private Date finishDate;
     private Date manufacturingDate;
     private String manufacturingName;
     private String name;
     private Date offeredDate;
     private int quantity;
     private Set<BuyerBidProduct> buyerBidProducts = new HashSet<BuyerBidProduct>(0);
     private Set<BuyerBuyProduct> buyerBuyProducts = new HashSet<BuyerBuyProduct>(0);
     private Set<Category> categories = new HashSet<Category>(0);

    public Product() {
    }

	
    public Product(Date finishDate, Date manufacturingDate, String manufacturingName, String name, Date offeredDate, int quantity) {
        this.finishDate = finishDate;
        this.manufacturingDate = manufacturingDate;
        this.manufacturingName = manufacturingName;
        this.name = name;
        this.offeredDate = offeredDate;
        this.quantity = quantity;
    }
    public Product(Seller seller, String description, Date expirationDate, Date finishDate, Date manufacturingDate, String manufacturingName, String name, Date offeredDate, int quantity, Set<BuyerBidProduct> buyerBidProducts, Set<BuyerBuyProduct> buyerBuyProducts, Set<Category> categories) {
       this.seller = seller;
       this.description = description;
       this.expirationDate = expirationDate;
       this.finishDate = finishDate;
       this.manufacturingDate = manufacturingDate;
       this.manufacturingName = manufacturingName;
       this.name = name;
       this.offeredDate = offeredDate;
       this.quantity = quantity;
       this.buyerBidProducts = buyerBidProducts;
       this.buyerBuyProducts = buyerBuyProducts;
       this.categories = categories;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="seller_id")
    public Seller getSeller() {
        return this.seller;
    }
    
    public void setSeller(Seller seller) {
        this.seller = seller;
    }

    
    @Column(name="description", length=150)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="expiration_date", length=10)
    public Date getExpirationDate() {
        return this.expirationDate;
    }
    
    public void setExpirationDate(Date expirationDate) {
        this.expirationDate = expirationDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="finish_date", nullable=false, length=10)
    public Date getFinishDate() {
        return this.finishDate;
    }
    
    public void setFinishDate(Date finishDate) {
        this.finishDate = finishDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="manufacturing_date", nullable=false, length=10)
    public Date getManufacturingDate() {
        return this.manufacturingDate;
    }
    
    public void setManufacturingDate(Date manufacturingDate) {
        this.manufacturingDate = manufacturingDate;
    }

    
    @Column(name="manufacturing_name", nullable=false, length=100)
    public String getManufacturingName() {
        return this.manufacturingName;
    }
    
    public void setManufacturingName(String manufacturingName) {
        this.manufacturingName = manufacturingName;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="offered_date", nullable=false, length=10)
    public Date getOfferedDate() {
        return this.offeredDate;
    }
    
    public void setOfferedDate(Date offeredDate) {
        this.offeredDate = offeredDate;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<BuyerBidProduct> getBuyerBidProducts() {
        return this.buyerBidProducts;
    }
    
    public void setBuyerBidProducts(Set<BuyerBidProduct> buyerBidProducts) {
        this.buyerBidProducts = buyerBidProducts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<BuyerBuyProduct> getBuyerBuyProducts() {
        return this.buyerBuyProducts;
    }
    
    public void setBuyerBuyProducts(Set<BuyerBuyProduct> buyerBuyProducts) {
        this.buyerBuyProducts = buyerBuyProducts;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="product_has_category", catalog="biddingschema", joinColumns = { 
        @JoinColumn(name="product_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="category_id", nullable=false, updatable=false) })
    public Set<Category> getCategories() {
        return this.categories;
    }
    
    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }




}



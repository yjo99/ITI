// default package
// Generated Jan 11, 2023, 1:32:50 PM by Hibernate Tools 6.0.0.Alpha3


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name="person"
    ,catalog="inheritance4"
)
public class Person  implements java.io.Serializable {


     private Integer id;
     private String firstName;
     private String lastName;
     private String personType;
     private Teacher teacher;
     private Student student;

    public Person() {
    }

	
    public Person(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
    public Person(String firstName, String lastName, String personType, Teacher teacher, Student student) {
       this.firstName = firstName;
       this.lastName = lastName;
       this.personType = personType;
       this.teacher = teacher;
       this.student = student;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="first_name", nullable=false, length=50)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", nullable=false, length=50)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="person_type", length=45)
    public String getPersonType() {
        return this.personType;
    }
    
    public void setPersonType(String personType) {
        this.personType = personType;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="person")
    public Teacher getTeacher() {
        return this.teacher;
    }
    
    public void setTeacher(Teacher teacher) {
        this.teacher = teacher;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="person")
    public Student getStudent() {
        return this.student;
    }
    
    public void setStudent(Student student) {
        this.student = student;
    }




}


